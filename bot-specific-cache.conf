# This configuration is intended to serve non-bot users from one cache and bot users from
# a bot specific cache.  The intention is that bots would always be served out of a long retention
# cache in order to reduce bot traffic to the backend server.


#initialize regular cache
proxy_cache_path regularnginxcache levels=1:2 keys_zone=regular_cache_zone:10m inactive=60m;
#initialize cache specifically for bots
proxy_cache_path botnginxcache levels=1:2 keys_zone=bot_cache_zone:10m inactive=60m;

proxy_cache_key "$scheme$request_method$host$request_uri";

#$nonbotuser set to 1 for non-bot requests
map $http_user_agent $nonbotuser {
	default 1; 
	~*(google|bing|yandex|msnbot) 0; 
} 

server {
	listen 80;
	server_name example.com;

	location ~* / {
	
	    # all incoming requests will be served from the regular cache first, default expiration of 15 seconds
	    # if the resource is not expired, then any traffic (bot and non-bot) will be served from regular cache
    	proxy_cache_valid 200 15s;
    	proxy_cache regular_cache_zone;
    	
    	# header X-RegularCache-Status will provide cash HIT, MISS, EXPIRED, BYPASS for the regular cache
    	add_header X-RegularCache-Status $upstream_cache_status;
    	
    	# pass all requests on to port 8000 in order to serve bots from the bot cache
		  proxy_pass http://127.0.0.1:8000$request_uri;
		  proxy_pass_request_headers on;
		}
	}

server {
	listen 8000;

	location ~* / {
	
	  # non-bot traffic will bypass the bot cache
	  # if a non-bot incoming request is being served and the resource has expired in the regular cache, then the request
	  # will be routed to this location, but bypass the bot cache and be proxy passed to the backend server.
	  # on the response, both caches will be updated with the fresh content
    proxy_cache_bypass $nonbotuser;
    proxy_cache_valid 200 12h;
    proxy_cache bot_cache_zone;
		add_header X-BotCache-Status $upstream_cache_status;
		proxy_pass http://backend:8888$request_uri;
		proxy_pass_request_headers on;
		}
}
